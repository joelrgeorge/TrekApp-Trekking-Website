{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelg\\\\Downloads\\\\MernStack-Tour-Management-main\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\router\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'; // Import necessary routing components\nimport '../styles/users.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [userRoles, setUserRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchUserRoles();\n  }, []);\n  const fetchUserRoles = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/v1/users');\n      const roles = response.data.data.map(user => user.role);\n      setUserRoles(roles);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching user roles:', error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading user roles...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"user-role-list\",\n        children: userRoles.map((role, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: role\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n      from: \"/\",\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"z/nqeu9JAeRyuo2QcDahs/UmBJo=\");\n_c = Users;\nconst Home = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"Welcome to the home page!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 20\n}, this);\n_c2 = Home;\nconst Restricted = () => {\n  // Check the user's role and restrict access if needed\n  const userRole = 'user'; // You can replace this with the actual user's role\n\n  if (userRole === 'admin') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Welcome to the restricted page! Admins can access this.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this); // Redirect users with role 'user' to the home page\n  }\n};\n_c3 = Restricted;\nexport default Users;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Users\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"Restricted\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Redirect","Users","userRoles","setUserRoles","loading","setLoading","fetchUserRoles","response","get","roles","data","map","user","role","error","console","index","Home","Restricted","userRole"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/router/ProtectedRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'; // Import necessary routing components\r\nimport '../styles/users.css'; // Import your CSS file\r\n\r\nconst Users = () => {\r\n  const [userRoles, setUserRoles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchUserRoles();\r\n  }, []);\r\n\r\n  const fetchUserRoles = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/api/v1/users');\r\n      const roles = response.data.data.map(user => user.role);\r\n      setUserRoles(roles);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching user roles:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <h1>User Roles</h1>\r\n        {loading ? (\r\n          <p>Loading user roles...</p>\r\n        ) : (\r\n          <ul className=\"user-role-list\">\r\n            {userRoles.map((role, index) => (\r\n              <li key={index}>{role}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <Redirect from=\"/\" to=\"/home\" />\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst Home = () => <div>Welcome to the home page!</div>;\r\n\r\nconst Restricted = () => {\r\n  // Check the user's role and restrict access if needed\r\n  const userRole = 'user'; // You can replace this with the actual user's role\r\n\r\n  if (userRole === 'admin') {\r\n    return <div>Welcome to the restricted page! Admins can access this.</div>;\r\n  } else {\r\n    return <Redirect to=\"/home\" />; // Redirect users with role 'user' to the home page\r\n  }\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAC7E,OAAO,qBAAqB,CAAC,CAAC;AAAA;AAE9B,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,YAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,oCAAoC,CAAC;MACtE,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;MACvDV,YAAY,CAACM,KAAK,CAAC;MACnBJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDT,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACE,QAAC,MAAM;IAAA,wBACL;MAAA,wBACE;QAAA,UAAI;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK,EAClBD,OAAO,gBACN;QAAA,UAAG;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAI,gBAE5B;QAAI,SAAS,EAAC,gBAAgB;QAAA,UAC3BF,SAAS,CAACS,GAAG,CAAC,CAACE,IAAI,EAAEG,KAAK,kBACzB;UAAA,UAAiBH;QAAI,GAAZG,KAAK;UAAA;UAAA;UAAA;QAAA,QACf;MAAC;QAAA;QAAA;QAAA;MAAA,QAEL;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eAEN,QAAC,QAAQ;MAAC,IAAI,EAAC,GAAG;MAAC,EAAE,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACzB;AAEb,CAAC;AAAC,GAtCIf,KAAK;AAAA,KAALA,KAAK;AAwCX,MAAMgB,IAAI,GAAG,mBAAM;EAAA,UAAK;AAAyB;EAAA;EAAA;EAAA;AAAA,QAAM;AAAC,MAAlDA,IAAI;AAEV,MAAMC,UAAU,GAAG,MAAM;EACvB;EACA,MAAMC,QAAQ,GAAG,MAAM,CAAC,CAAC;;EAEzB,IAAIA,QAAQ,KAAK,OAAO,EAAE;IACxB,oBAAO;MAAA,UAAK;IAAuD;MAAA;MAAA;MAAA;IAAA,QAAM;EAC3E,CAAC,MAAM;IACL,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC,CAAC;EAClC;AACF,CAAC;AAAC,MATID,UAAU;AAWhB,eAAejB,KAAK;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}