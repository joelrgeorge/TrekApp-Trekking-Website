{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelg\\\\Downloads\\\\MernStack-Tour-Management-main\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\router\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/users.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [userRole, setUserRole] = useState(''); // Store the user's role\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchUserRole();\n  }, []);\n  const fetchUserRole = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/v1/user-role');\n      const role = response.data.role; // Assuming the response contains the user's role\n      setUserRole(role);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching user role:', error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user role...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userRole === 'admin' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome, Admin!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have access to everything.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome, User!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your access is restricted.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"PE+Iiwnzgqdzjl7Mh00ljmh4i4U=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","axios","Users","userRole","setUserRole","loading","setLoading","fetchUserRole","response","get","role","data","error","console"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/router/ProtectedRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/users.css'; // Import your CSS file\r\n\r\nconst Users = () => {\r\n  const [userRole, setUserRole] = useState(''); // Store the user's role\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchUserRole();\r\n  }, []);\r\n\r\n  const fetchUserRole = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/api/v1/user-role');\r\n      const role = response.data.role; // Assuming the response contains the user's role\r\n      setUserRole(role);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching user role:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Dashboard</h1>\r\n      {loading ? (\r\n        <p>Loading user role...</p>\r\n      ) : (\r\n        <div>\r\n          {userRole === 'admin' ? (\r\n            <div>\r\n              <h2>Welcome, Admin!</h2>\r\n              {/* Admin-specific content */}\r\n              <p>You have access to everything.</p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2>Welcome, User!</h2>\r\n              {/* User-specific content */}\r\n              <p>Your access is restricted.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB,CAAC,CAAC;AAAA;AAE9B,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdO,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,YAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,wCAAwC,CAAC;MAC1E,MAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAI,CAACD,IAAI,CAAC,CAAC;MACjCN,WAAW,CAACM,IAAI,CAAC;MACjBJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,EACtBD,OAAO,gBACN;MAAA,UAAG;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAI,gBAE3B;MAAA,UACGF,QAAQ,KAAK,OAAO,gBACnB;QAAA,wBACE;UAAA,UAAI;QAAe;UAAA;UAAA;UAAA;QAAA,QAAK,eAExB;UAAA,UAAG;QAA8B;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,gBAEN;QAAA,wBACE;UAAA,UAAI;QAAc;UAAA;UAAA;UAAA;QAAA,QAAK,eAEvB;UAAA,UAAG;QAA0B;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA;IAEpC;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GA5CID,KAAK;AAAA,KAALA,KAAK;AA8CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}