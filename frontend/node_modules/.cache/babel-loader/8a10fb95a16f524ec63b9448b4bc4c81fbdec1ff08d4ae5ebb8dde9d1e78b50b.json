{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WriteConcern = exports.WRITE_CONCERN_KEYS = void 0;\nexports.WRITE_CONCERN_KEYS = ['w', 'wtimeout', 'j', 'journal', 'fsync'];\n/**\r\n * A MongoDB WriteConcern, which describes the level of acknowledgement\r\n * requested from MongoDB for write operations.\r\n * @public\r\n *\r\n * @see https://www.mongodb.com/docs/manual/reference/write-concern/\r\n */\nclass WriteConcern {\n  /**\r\n   * Constructs a WriteConcern from the write concern properties.\r\n   * @param w - request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\r\n   * @param wtimeoutMS - specify a time limit to prevent write operations from blocking indefinitely\r\n   * @param journal - request acknowledgment that the write operation has been written to the on-disk journal\r\n   * @param fsync - equivalent to the j option. Is deprecated and will be removed in the next major version.\r\n   */\n  constructor(w, wtimeoutMS, journal, fsync) {\n    if (w != null) {\n      if (!Number.isNaN(Number(w))) {\n        this.w = Number(w);\n      } else {\n        this.w = w;\n      }\n    }\n    if (wtimeoutMS != null) {\n      this.wtimeoutMS = this.wtimeout = wtimeoutMS;\n    }\n    if (journal != null) {\n      this.journal = this.j = journal;\n    }\n    if (fsync != null) {\n      this.journal = this.j = fsync ? true : false;\n    }\n  }\n  /**\r\n   * Apply a write concern to a command document. Will modify and return the command.\r\n   */\n  static apply(command, writeConcern) {\n    const wc = {};\n    // The write concern document sent to the server has w/wtimeout/j fields.\n    if (writeConcern.w != null) wc.w = writeConcern.w;\n    if (writeConcern.wtimeoutMS != null) wc.wtimeout = writeConcern.wtimeoutMS;\n    if (writeConcern.journal != null) wc.j = writeConcern.j;\n    command.writeConcern = wc;\n    return command;\n  }\n  /** Construct a WriteConcern given an options object. */\n  static fromOptions(options, inherit) {\n    if (options == null) return undefined;\n    inherit = inherit ?? {};\n    let opts;\n    if (typeof options === 'string' || typeof options === 'number') {\n      opts = {\n        w: options\n      };\n    } else if (options instanceof WriteConcern) {\n      opts = options;\n    } else {\n      opts = options.writeConcern;\n    }\n    const parentOpts = inherit instanceof WriteConcern ? inherit : inherit.writeConcern;\n    const {\n      w = undefined,\n      wtimeout = undefined,\n      j = undefined,\n      fsync = undefined,\n      journal = undefined,\n      wtimeoutMS = undefined\n    } = {\n      ...parentOpts,\n      ...opts\n    };\n    if (w != null || wtimeout != null || wtimeoutMS != null || j != null || journal != null || fsync != null) {\n      return new WriteConcern(w, wtimeout ?? wtimeoutMS, j ?? journal, fsync);\n    }\n    return undefined;\n  }\n}\nexports.WriteConcern = WriteConcern;","map":{"version":3,"mappings":";;;;;;AAsCaA,0BAAkB,GAAG,CAAC,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC;AAY5E;;;;;;;AAOA,MAAaC,YAAY;EAuBvB;;;;;;;EAOAC,YAAYC,CAAK,EAAEC,UAAmB,EAAEC,OAAiB,EAAEC,KAAmB;IAC5E,IAAIH,CAAC,IAAI,IAAI,EAAE;MACb,IAAI,CAACI,MAAM,CAACC,KAAK,CAACD,MAAM,CAACJ,CAAC,CAAC,CAAC,EAAE;QAC5B,IAAI,CAACA,CAAC,GAAGI,MAAM,CAACJ,CAAC,CAAC;OACnB,MAAM;QACL,IAAI,CAACA,CAAC,GAAGA,CAAC;;;IAGd,IAAIC,UAAU,IAAI,IAAI,EAAE;MACtB,IAAI,CAACA,UAAU,GAAG,IAAI,CAACK,QAAQ,GAAGL,UAAU;;IAE9C,IAAIC,OAAO,IAAI,IAAI,EAAE;MACnB,IAAI,CAACA,OAAO,GAAG,IAAI,CAACK,CAAC,GAAGL,OAAO;;IAEjC,IAAIC,KAAK,IAAI,IAAI,EAAE;MACjB,IAAI,CAACD,OAAO,GAAG,IAAI,CAACK,CAAC,GAAGJ,KAAK,GAAG,IAAI,GAAG,KAAK;;EAEhD;EAEA;;;EAGA,OAAOK,KAAK,CAACC,OAAiB,EAAEC,YAA0B;IACxD,MAAMC,EAAE,GAA+B,EAAE;IACzC;IACA,IAAID,YAAY,CAACV,CAAC,IAAI,IAAI,EAAEW,EAAE,CAACX,CAAC,GAAGU,YAAY,CAACV,CAAC;IACjD,IAAIU,YAAY,CAACT,UAAU,IAAI,IAAI,EAAEU,EAAE,CAACL,QAAQ,GAAGI,YAAY,CAACT,UAAU;IAC1E,IAAIS,YAAY,CAACR,OAAO,IAAI,IAAI,EAAES,EAAE,CAACJ,CAAC,GAAGG,YAAY,CAACH,CAAC;IACvDE,OAAO,CAACC,YAAY,GAAGC,EAAE;IACzB,OAAOF,OAAO;EAChB;EAEA;EACA,OAAOG,WAAW,CAChBC,OAAgD,EAChDC,OAA4C;IAE5C,IAAID,OAAO,IAAI,IAAI,EAAE,OAAOE,SAAS;IACrCD,OAAO,GAAGA,OAAO,IAAI,EAAE;IACvB,IAAIE,IAAqD;IACzD,IAAI,OAAOH,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC9DG,IAAI,GAAG;QAAEhB,CAAC,EAAEa;MAAO,CAAE;KACtB,MAAM,IAAIA,OAAO,YAAYf,YAAY,EAAE;MAC1CkB,IAAI,GAAGH,OAAO;KACf,MAAM;MACLG,IAAI,GAAGH,OAAO,CAACH,YAAY;;IAE7B,MAAMO,UAAU,GACdH,OAAO,YAAYhB,YAAY,GAAGgB,OAAO,GAAGA,OAAO,CAACJ,YAAY;IAElE,MAAM;MACJV,CAAC,GAAGe,SAAS;MACbT,QAAQ,GAAGS,SAAS;MACpBR,CAAC,GAAGQ,SAAS;MACbZ,KAAK,GAAGY,SAAS;MACjBb,OAAO,GAAGa,SAAS;MACnBd,UAAU,GAAGc;IAAS,CACvB,GAAG;MACF,GAAGE,UAAU;MACb,GAAGD;KACJ;IACD,IACEhB,CAAC,IAAI,IAAI,IACTM,QAAQ,IAAI,IAAI,IAChBL,UAAU,IAAI,IAAI,IAClBM,CAAC,IAAI,IAAI,IACTL,OAAO,IAAI,IAAI,IACfC,KAAK,IAAI,IAAI,EACb;MACA,OAAO,IAAIL,YAAY,CAACE,CAAC,EAAEM,QAAQ,IAAIL,UAAU,EAAEM,CAAC,IAAIL,OAAO,EAAEC,KAAK,CAAC;;IAEzE,OAAOY,SAAS;EAClB;;AAtGFlB","names":["exports","WriteConcern","constructor","w","wtimeoutMS","journal","fsync","Number","isNaN","wtimeout","j","apply","command","writeConcern","wc","fromOptions","options","inherit","undefined","opts","parentOpts"],"sources":["C:\\Users\\joelg\\Downloads\\MernStack-Tour-Management-main\\MernStack-Tour-Management-main\\tour-management\\node_modules\\mongodb\\src\\write_concern.ts"],"sourcesContent":["import { type Document } from './bson';\r\n\r\n/** @public */\r\nexport type W = number | 'majority';\r\n\r\n/** @public */\r\nexport interface WriteConcernOptions {\r\n  /** Write Concern as an object */\r\n  writeConcern?: WriteConcern | WriteConcernSettings;\r\n}\r\n\r\n/** @public */\r\nexport interface WriteConcernSettings {\r\n  /** The write concern */\r\n  w?: W;\r\n  /** The write concern timeout */\r\n  wtimeoutMS?: number;\r\n  /** The journal write concern */\r\n  journal?: boolean;\r\n\r\n  // legacy options\r\n  /**\r\n   * The journal write concern.\r\n   * @deprecated Will be removed in the next major version. Please use the journal option.\r\n   */\r\n  j?: boolean;\r\n  /**\r\n   * The write concern timeout.\r\n   * @deprecated Will be removed in the next major version. Please use the wtimeoutMS option.\r\n   */\r\n  wtimeout?: number;\r\n  /**\r\n   * The file sync write concern.\r\n   * @deprecated Will be removed in the next major version. Please use the journal option.\r\n   */\r\n  fsync?: boolean | 1;\r\n}\r\n\r\nexport const WRITE_CONCERN_KEYS = ['w', 'wtimeout', 'j', 'journal', 'fsync'];\r\n\r\n/** The write concern options that decorate the server command. */\r\ninterface CommandWriteConcernOptions {\r\n  /** The write concern */\r\n  w?: W;\r\n  /** The journal write concern. */\r\n  j?: boolean;\r\n  /** The write concern timeout. */\r\n  wtimeout?: number;\r\n}\r\n\r\n/**\r\n * A MongoDB WriteConcern, which describes the level of acknowledgement\r\n * requested from MongoDB for write operations.\r\n * @public\r\n *\r\n * @see https://www.mongodb.com/docs/manual/reference/write-concern/\r\n */\r\nexport class WriteConcern {\r\n  /** Request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags. */\r\n  readonly w?: W;\r\n  /** Request acknowledgment that the write operation has been written to the on-disk journal */\r\n  readonly journal?: boolean;\r\n  /** Specify a time limit to prevent write operations from blocking indefinitely */\r\n  readonly wtimeoutMS?: number;\r\n  /**\r\n   * Specify a time limit to prevent write operations from blocking indefinitely.\r\n   * @deprecated Will be removed in the next major version. Please use wtimeoutMS.\r\n   */\r\n  wtimeout?: number;\r\n  /**\r\n   * Request acknowledgment that the write operation has been written to the on-disk journal.\r\n   * @deprecated Will be removed in the next major version. Please use journal.\r\n   */\r\n  j?: boolean;\r\n  /**\r\n   * Equivalent to the j option.\r\n   * @deprecated Will be removed in the next major version. Please use journal.\r\n   */\r\n  fsync?: boolean | 1;\r\n\r\n  /**\r\n   * Constructs a WriteConcern from the write concern properties.\r\n   * @param w - request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\r\n   * @param wtimeoutMS - specify a time limit to prevent write operations from blocking indefinitely\r\n   * @param journal - request acknowledgment that the write operation has been written to the on-disk journal\r\n   * @param fsync - equivalent to the j option. Is deprecated and will be removed in the next major version.\r\n   */\r\n  constructor(w?: W, wtimeoutMS?: number, journal?: boolean, fsync?: boolean | 1) {\r\n    if (w != null) {\r\n      if (!Number.isNaN(Number(w))) {\r\n        this.w = Number(w);\r\n      } else {\r\n        this.w = w;\r\n      }\r\n    }\r\n    if (wtimeoutMS != null) {\r\n      this.wtimeoutMS = this.wtimeout = wtimeoutMS;\r\n    }\r\n    if (journal != null) {\r\n      this.journal = this.j = journal;\r\n    }\r\n    if (fsync != null) {\r\n      this.journal = this.j = fsync ? true : false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply a write concern to a command document. Will modify and return the command.\r\n   */\r\n  static apply(command: Document, writeConcern: WriteConcern): Document {\r\n    const wc: CommandWriteConcernOptions = {};\r\n    // The write concern document sent to the server has w/wtimeout/j fields.\r\n    if (writeConcern.w != null) wc.w = writeConcern.w;\r\n    if (writeConcern.wtimeoutMS != null) wc.wtimeout = writeConcern.wtimeoutMS;\r\n    if (writeConcern.journal != null) wc.j = writeConcern.j;\r\n    command.writeConcern = wc;\r\n    return command;\r\n  }\r\n\r\n  /** Construct a WriteConcern given an options object. */\r\n  static fromOptions(\r\n    options?: WriteConcernOptions | WriteConcern | W,\r\n    inherit?: WriteConcernOptions | WriteConcern\r\n  ): WriteConcern | undefined {\r\n    if (options == null) return undefined;\r\n    inherit = inherit ?? {};\r\n    let opts: WriteConcernSettings | WriteConcern | undefined;\r\n    if (typeof options === 'string' || typeof options === 'number') {\r\n      opts = { w: options };\r\n    } else if (options instanceof WriteConcern) {\r\n      opts = options;\r\n    } else {\r\n      opts = options.writeConcern;\r\n    }\r\n    const parentOpts: WriteConcern | WriteConcernSettings | undefined =\r\n      inherit instanceof WriteConcern ? inherit : inherit.writeConcern;\r\n\r\n    const {\r\n      w = undefined,\r\n      wtimeout = undefined,\r\n      j = undefined,\r\n      fsync = undefined,\r\n      journal = undefined,\r\n      wtimeoutMS = undefined\r\n    } = {\r\n      ...parentOpts,\r\n      ...opts\r\n    };\r\n    if (\r\n      w != null ||\r\n      wtimeout != null ||\r\n      wtimeoutMS != null ||\r\n      j != null ||\r\n      journal != null ||\r\n      fsync != null\r\n    ) {\r\n      return new WriteConcern(w, wtimeout ?? wtimeoutMS, j ?? journal, fsync);\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}