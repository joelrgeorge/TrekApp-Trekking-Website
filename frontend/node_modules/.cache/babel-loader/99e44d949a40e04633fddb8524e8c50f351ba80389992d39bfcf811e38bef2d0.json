{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.X509 = void 0;\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nclass X509 extends auth_provider_1.AuthProvider {\n  async prepare(handshakeDoc, authContext) {\n    const {\n      credentials\n    } = authContext;\n    if (!credentials) {\n      throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    return {\n      ...handshakeDoc,\n      speculativeAuthenticate: x509AuthenticateCommand(credentials)\n    };\n  }\n  async auth(authContext) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    const response = authContext.response;\n    if (response?.speculativeAuthenticate) {\n      return;\n    }\n    await connection.commandAsync((0, utils_1.ns)('$external.$cmd'), x509AuthenticateCommand(credentials), undefined);\n  }\n}\nexports.X509 = X509;\nfunction x509AuthenticateCommand(credentials) {\n  const command = {\n    authenticate: 1,\n    mechanism: 'MONGODB-X509'\n  };\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n  return command;\n}","map":{"version":3,"mappings":";;;;;;AACA;AACA;AAEA;AAGA,MAAaA,IAAK,SAAQC,4BAAY;EAC3B,MAAMC,OAAO,CACpBC,YAA+B,EAC/BC,WAAwB;IAExB,MAAM;MAAEC;IAAW,CAAE,GAAGD,WAAW;IACnC,IAAI,CAACC,WAAW,EAAE;MAChB,MAAM,IAAIC,oCAA4B,CAAC,uCAAuC,CAAC;;IAEjF,OAAO;MAAE,GAAGH,YAAY;MAAEI,uBAAuB,EAAEC,uBAAuB,CAACH,WAAW;IAAC,CAAE;EAC3F;EAES,MAAMI,IAAI,CAACL,WAAwB;IAC1C,MAAMM,UAAU,GAAGN,WAAW,CAACM,UAAU;IACzC,MAAML,WAAW,GAAGD,WAAW,CAACC,WAAW;IAC3C,IAAI,CAACA,WAAW,EAAE;MAChB,MAAM,IAAIC,oCAA4B,CAAC,uCAAuC,CAAC;;IAEjF,MAAMK,QAAQ,GAAGP,WAAW,CAACO,QAAQ;IAErC,IAAIA,QAAQ,EAAEJ,uBAAuB,EAAE;MACrC;;IAGF,MAAMG,UAAU,CAACE,YAAY,CAC3B,cAAE,EAAC,gBAAgB,CAAC,EACpBJ,uBAAuB,CAACH,WAAW,CAAC,EACpCQ,SAAS,CACV;EACH;;AA7BFC;AAgCA,SAASN,uBAAuB,CAACH,WAA6B;EAC5D,MAAMU,OAAO,GAAa;IAAEC,YAAY,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAc,CAAE;EACxE,IAAIZ,WAAW,CAACa,QAAQ,EAAE;IACxBH,OAAO,CAACI,IAAI,GAAGd,WAAW,CAACa,QAAQ;;EAGrC,OAAOH,OAAO;AAChB","names":["X509","auth_provider_1","prepare","handshakeDoc","authContext","credentials","error_1","speculativeAuthenticate","x509AuthenticateCommand","auth","connection","response","commandAsync","undefined","exports","command","authenticate","mechanism","username","user"],"sources":["C:\\Users\\joelg\\Downloads\\MernStack-Tour-Management-main\\MernStack-Tour-Management-main\\tour-management\\node_modules\\mongodb\\src\\cmap\\auth\\x509.ts"],"sourcesContent":["import type { Document } from '../../bson';\r\nimport { MongoMissingCredentialsError } from '../../error';\r\nimport { ns } from '../../utils';\r\nimport type { HandshakeDocument } from '../connect';\r\nimport { type AuthContext, AuthProvider } from './auth_provider';\r\nimport type { MongoCredentials } from './mongo_credentials';\r\n\r\nexport class X509 extends AuthProvider {\r\n  override async prepare(\r\n    handshakeDoc: HandshakeDocument,\r\n    authContext: AuthContext\r\n  ): Promise<HandshakeDocument> {\r\n    const { credentials } = authContext;\r\n    if (!credentials) {\r\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\r\n    }\r\n    return { ...handshakeDoc, speculativeAuthenticate: x509AuthenticateCommand(credentials) };\r\n  }\r\n\r\n  override async auth(authContext: AuthContext) {\r\n    const connection = authContext.connection;\r\n    const credentials = authContext.credentials;\r\n    if (!credentials) {\r\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\r\n    }\r\n    const response = authContext.response;\r\n\r\n    if (response?.speculativeAuthenticate) {\r\n      return;\r\n    }\r\n\r\n    await connection.commandAsync(\r\n      ns('$external.$cmd'),\r\n      x509AuthenticateCommand(credentials),\r\n      undefined\r\n    );\r\n  }\r\n}\r\n\r\nfunction x509AuthenticateCommand(credentials: MongoCredentials) {\r\n  const command: Document = { authenticate: 1, mechanism: 'MONGODB-X509' };\r\n  if (credentials.username) {\r\n    command.user = credentials.username;\r\n  }\r\n\r\n  return command;\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}