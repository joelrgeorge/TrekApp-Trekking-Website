{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plain = void 0;\nconst bson_1 = require(\"../../bson\");\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nclass Plain extends auth_provider_1.AuthProvider {\n  async auth(authContext) {\n    const {\n      connection,\n      credentials\n    } = authContext;\n    if (!credentials) {\n      throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    const {\n      username,\n      password\n    } = credentials;\n    const payload = new bson_1.Binary(Buffer.from(`\\x00${username}\\x00${password}`));\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n    await connection.commandAsync((0, utils_1.ns)('$external.$cmd'), command, undefined);\n  }\n}\nexports.Plain = Plain;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,MAAaA,KAAM,SAAQC,4BAAY;EAC5B,MAAMC,IAAI,CAACC,WAAwB;IAC1C,MAAM;MAAEC,UAAU;MAAEC;IAAW,CAAE,GAAGF,WAAW;IAC/C,IAAI,CAACE,WAAW,EAAE;MAChB,MAAM,IAAIC,oCAA4B,CAAC,uCAAuC,CAAC;;IAGjF,MAAM;MAAEC,QAAQ;MAAEC;IAAQ,CAAE,GAAGH,WAAW;IAE1C,MAAMI,OAAO,GAAG,IAAIC,aAAM,CAACC,MAAM,CAACC,IAAI,CAAC,OAAOL,QAAQ,OAAOC,QAAQ,EAAE,CAAC,CAAC;IACzE,MAAMK,OAAO,GAAG;MACdC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE,OAAO;MAClBN,OAAO,EAAEA,OAAO;MAChBO,aAAa,EAAE;KAChB;IAED,MAAMZ,UAAU,CAACa,YAAY,CAAC,cAAE,EAAC,gBAAgB,CAAC,EAAEJ,OAAO,EAAEK,SAAS,CAAC;EACzE;;AAlBFC","names":["Plain","auth_provider_1","auth","authContext","connection","credentials","error_1","username","password","payload","bson_1","Buffer","from","command","saslStart","mechanism","autoAuthorize","commandAsync","undefined","exports"],"sources":["C:\\Users\\joelg\\Downloads\\MernStack-Tour-Management-main\\MernStack-Tour-Management-main\\tour-management\\node_modules\\mongodb\\src\\cmap\\auth\\plain.ts"],"sourcesContent":["import { Binary } from '../../bson';\r\nimport { MongoMissingCredentialsError } from '../../error';\r\nimport { ns } from '../../utils';\r\nimport { type AuthContext, AuthProvider } from './auth_provider';\r\n\r\nexport class Plain extends AuthProvider {\r\n  override async auth(authContext: AuthContext): Promise<void> {\r\n    const { connection, credentials } = authContext;\r\n    if (!credentials) {\r\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\r\n    }\r\n\r\n    const { username, password } = credentials;\r\n\r\n    const payload = new Binary(Buffer.from(`\\x00${username}\\x00${password}`));\r\n    const command = {\r\n      saslStart: 1,\r\n      mechanism: 'PLAIN',\r\n      payload: payload,\r\n      autoAuthorize: 1\r\n    };\r\n\r\n    await connection.commandAsync(ns('$external.$cmd'), command, undefined);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}