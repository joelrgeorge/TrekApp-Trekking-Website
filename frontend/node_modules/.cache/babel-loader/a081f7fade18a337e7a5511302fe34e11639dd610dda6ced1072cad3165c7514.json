{"ast":null,"code":"// Example login logic\nconst login = async credentials => {\n  try {\n    // Simulate an API call to authenticate the user\n    const user = await authenticateUser(credentials);\n    if (user && user.role === 'admin') {\n      user.isAdmin = true;\n    }\n    dispatch({\n      type: 'LOGIN_SUCCESS',\n      payload: user\n    });\n    // ... other login logic ...\n  } catch (error) {\n    dispatch({\n      type: 'LOGIN_FAILURE',\n      payload: error.message\n    });\n  }\n};\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        user: null,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      const user = action.payload;\n      return {\n        user,\n        loading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        user: null,\n        loading: false,\n        error: action.payload\n      };\n    case 'REGISTER_SUCCESS':\n      return {\n        user: null,\n        loading: false,\n        error: null\n      };\n    case 'LOGOUT':\n      return {\n        user: null,\n        loading: false,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n_c = AuthReducer;\nvar _c;\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"names":["login","credentials","user","authenticateUser","role","isAdmin","dispatch","type","payload","error","message","AuthReducer","state","action","loading"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/context/AuthContext.js"],"sourcesContent":["// Example login logic\r\nconst login = async (credentials) => {\r\n    try {\r\n      // Simulate an API call to authenticate the user\r\n      const user = await authenticateUser(credentials);\r\n  \r\n      if (user && user.role === 'admin') {\r\n        user.isAdmin = true;\r\n      }\r\n  \r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: user });\r\n      // ... other login logic ...\r\n    } catch (error) {\r\n      dispatch({ type: 'LOGIN_FAILURE', payload: error.message });\r\n    }\r\n  };\r\n  const AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return {\r\n        user: null,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      const user = action.payload;\r\n      return {\r\n        user,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case 'REGISTER_SUCCESS':\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAG,MAAOC,WAAW,IAAK;EACjC,IAAI;IACF;IACA,MAAMC,IAAI,GAAG,MAAMC,gBAAgB,CAACF,WAAW,CAAC;IAEhD,IAAIC,IAAI,IAAIA,IAAI,CAACE,IAAI,KAAK,OAAO,EAAE;MACjCF,IAAI,CAACG,OAAO,GAAG,IAAI;IACrB;IAEAC,QAAQ,CAAC;MAAEC,IAAI,EAAE,eAAe;MAAEC,OAAO,EAAEN;IAAK,CAAC,CAAC;IAClD;EACF,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdH,QAAQ,CAAC;MAAEC,IAAI,EAAE,eAAe;MAAEC,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EAC7D;AACF,CAAC;AACD,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACvC,QAAQA,MAAM,CAACN,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QACLL,IAAI,EAAE,IAAI;QACVY,OAAO,EAAE,IAAI;QACbL,KAAK,EAAE;MACT,CAAC;IACH,KAAK,eAAe;MAClB,MAAMP,IAAI,GAAGW,MAAM,CAACL,OAAO;MAC3B,OAAO;QACLN,IAAI;QACJY,OAAO,EAAE,KAAK;QACdL,KAAK,EAAE;MACT,CAAC;IACH,KAAK,eAAe;MAClB,OAAO;QACLP,IAAI,EAAE,IAAI;QACVY,OAAO,EAAE,KAAK;QACdL,KAAK,EAAEI,MAAM,CAACL;MAChB,CAAC;IACH,KAAK,kBAAkB;MACrB,OAAO;QACLN,IAAI,EAAE,IAAI;QACVY,OAAO,EAAE,KAAK;QACdL,KAAK,EAAE;MACT,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACLP,IAAI,EAAE,IAAI;QACVY,OAAO,EAAE,KAAK;QACdL,KAAK,EAAE;MACT,CAAC;IACH;MACE,OAAOG,KAAK;EAAC;AAEnB,CAAC;AAAC,KApCMD,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}