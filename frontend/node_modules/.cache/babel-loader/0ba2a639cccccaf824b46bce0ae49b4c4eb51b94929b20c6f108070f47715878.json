{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelg\\\\Downloads\\\\MernStack-Tour-Management-main\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\router\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, Route } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element,\n  adminOnly,\n  ...rest\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // Check if the user is authenticated and has admin privileges\n  const isAdmin = user && user.role === 'admin';\n  if (adminOnly && (!user || !isAdmin)) {\n    // If adminOnly is true and the user is not an admin or not authenticated, redirect to login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(ProtectedRoute, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","Route","AuthContext","ProtectedRoute","element","adminOnly","rest","user","isAdmin","role"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/router/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate, Route } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ element, adminOnly, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  // Check if the user is authenticated and has admin privileges\r\n  const isAdmin = user && user.role === 'admin';\r\n\r\n  if (adminOnly && (!user || !isAdmin)) {\r\n    // If adminOnly is true and the user is not an admin or not authenticated, redirect to login\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,wBAAwB;AAAC;AAErD,MAAMC,cAAc,GAAG,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAA;EAC1D,MAAM;IAAEC;EAAK,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;;EAExC;EACA,MAAMM,OAAO,GAAGD,IAAI,IAAIA,IAAI,CAACE,IAAI,KAAK,OAAO;EAE7C,IAAIJ,SAAS,KAAK,CAACE,IAAI,IAAI,CAACC,OAAO,CAAC,EAAE;IACpC;IACA,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EACjC;AAEF,CAAC;AAAA,GAXKL,cAAc;AAAA,KAAdA,cAAc;AAapB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}