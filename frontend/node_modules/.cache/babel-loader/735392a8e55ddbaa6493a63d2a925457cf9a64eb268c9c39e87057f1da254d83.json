{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelg\\\\Downloads\\\\MernStack-Tour-Management-main\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\admin\\\\AddTours.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [tourData, setTourData] = useState({\n    name: '',\n    description: ''\n    // Add more fields as needed\n  });\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setTourData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/create-tour', tourData); // Replace with your API endpoint\n      if (response.data.success) {\n        console.log('Tour created successfully:', response.data.data);\n        // Optionally, you can reset the form or show a success message\n      } else {\n        console.error('Failed to create tour:', response.data.message);\n        // Handle the error case, show an error message, etc.\n      }\n    } catch (error) {\n      console.error('Error creating tour:', error);\n      // Handle network error or other exceptions\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create New Tour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Tour Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: tourData.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: tourData.description,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Tour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"YICJ014rERfFGymiZlrgUhPTxvk=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","axios","AdminDashboard","tourData","setTourData","name","description","handleInputChange","event","value","target","prevData","handleSubmit","preventDefault","response","post","data","success","console","log","error","message"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/admin/AddTours.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AdminDashboard() {\r\n  const [tourData, setTourData] = useState({\r\n    name: '',\r\n    description: '',\r\n    // Add more fields as needed\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setTourData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/create-tour', tourData); // Replace with your API endpoint\r\n      if (response.data.success) {\r\n        console.log('Tour created successfully:', response.data.data);\r\n        // Optionally, you can reset the form or show a success message\r\n      } else {\r\n        console.error('Failed to create tour:', response.data.message);\r\n        // Handle the error case, show an error message, etc.\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating tour:', error);\r\n      // Handle network error or other exceptions\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create New Tour</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Tour Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={tourData.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={tourData.description}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        {/* Add more fields as needed */}\r\n        <button type=\"submit\">Create Tour</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,cAAc,GAAG;EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IACvCK,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE;IACb;EACF,CAAC,CAAC;;EAEF,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAM;MAAEH,IAAI;MAAEI;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IACpCN,WAAW,CAAEO,QAAQ,KAAM;MACzB,GAAGA,QAAQ;MACX,CAACN,IAAI,GAAGI;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOJ,KAAK,IAAK;IACpCA,KAAK,CAACK,cAAc,EAAE;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,kBAAkB,EAAEZ,QAAQ,CAAC,CAAC,CAAC;MACjE,IAAIW,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;QAC7D;MACF,CAAC,MAAM;QACLE,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEN,QAAQ,CAACE,IAAI,CAACK,OAAO,CAAC;QAC9D;MACF;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF;EACF,CAAC;;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAe;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAM,QAAQ,EAAER,YAAa;MAAA,wBAC3B;QAAA,wBACE;UAAO,OAAO,EAAC,MAAM;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAQ,eACvC;UACE,IAAI,EAAC,MAAM;UACX,EAAE,EAAC,MAAM;UACT,IAAI,EAAC,MAAM;UACX,KAAK,EAAET,QAAQ,CAACE,IAAK;UACrB,QAAQ,EAAEE,iBAAkB;UAC5B,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAA,wBACE;UAAO,OAAO,EAAC,aAAa;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAQ,eAChD;UACE,EAAE,EAAC,aAAa;UAChB,IAAI,EAAC,aAAa;UAClB,KAAK,EAAEJ,QAAQ,CAACG,WAAY;UAC5B,QAAQ,EAAEC,iBAAkB;UAC5B,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA9DQL,cAAc;AAAA,KAAdA,cAAc;AAgEvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}