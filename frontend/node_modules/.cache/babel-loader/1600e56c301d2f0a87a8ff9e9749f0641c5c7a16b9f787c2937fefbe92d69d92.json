{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunCommandCursor = void 0;\nconst error_1 = require(\"../error\");\nconst execute_operation_1 = require(\"../operations/execute_operation\");\nconst get_more_1 = require(\"../operations/get_more\");\nconst run_command_1 = require(\"../operations/run_command\");\nconst utils_1 = require(\"../utils\");\nconst abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @public */\nclass RunCommandCursor extends abstract_cursor_1.AbstractCursor {\n  /**\r\n   * Controls the `getMore.comment` field\r\n   * @param comment - any BSON value\r\n   */\n  setComment(comment) {\n    this.getMoreOptions.comment = comment;\n    return this;\n  }\n  /**\r\n   * Controls the `getMore.maxTimeMS` field. Only valid when cursor is tailable await\r\n   * @param maxTimeMS - the number of milliseconds to wait for new data\r\n   */\n  setMaxTimeMS(maxTimeMS) {\n    this.getMoreOptions.maxAwaitTimeMS = maxTimeMS;\n    return this;\n  }\n  /**\r\n   * Controls the `getMore.batchSize` field\r\n   * @param maxTimeMS - the number documents to return in the `nextBatch`\r\n   */\n  setBatchSize(batchSize) {\n    this.getMoreOptions.batchSize = batchSize;\n    return this;\n  }\n  /** Unsupported for RunCommandCursor */\n  clone() {\n    throw new error_1.MongoAPIError('Clone not supported, create a new cursor with db.runCursorCommand');\n  }\n  /** Unsupported for RunCommandCursor: readConcern must be configured directly on command document */\n  withReadConcern(_) {\n    throw new error_1.MongoAPIError('RunCommandCursor does not support readConcern it must be attached to the command being run');\n  }\n  /** Unsupported for RunCommandCursor: various cursor flags must be configured directly on command document */\n  addCursorFlag(_, __) {\n    throw new error_1.MongoAPIError('RunCommandCursor does not support cursor flags, they must be attached to the command being run');\n  }\n  /** Unsupported for RunCommandCursor: maxTimeMS must be configured directly on command document */\n  maxTimeMS(_) {\n    throw new error_1.MongoAPIError('maxTimeMS must be configured on the command document directly, to configure getMore.maxTimeMS use cursor.setMaxTimeMS()');\n  }\n  /** Unsupported for RunCommandCursor: batchSize must be configured directly on command document */\n  batchSize(_) {\n    throw new error_1.MongoAPIError('batchSize must be configured on the command document directly, to configure getMore.batchSize use cursor.setBatchSize()');\n  }\n  /** @internal */\n  constructor(db, command, options = {}) {\n    super(db.client, (0, utils_1.ns)(db.namespace), options);\n    this.getMoreOptions = {};\n    this.db = db;\n    this.command = Object.freeze({\n      ...command\n    });\n  }\n  /** @internal */\n  _initialize(session, callback) {\n    const operation = new run_command_1.RunCommandOperation(this.db, this.command, {\n      ...this.cursorOptions,\n      session: session,\n      readPreference: this.cursorOptions.readPreference\n    });\n    (0, execute_operation_1.executeOperation)(this.client, operation).then(response => {\n      if (response.cursor == null) {\n        callback(new error_1.MongoUnexpectedServerResponseError('Expected server to respond with cursor'));\n        return;\n      }\n      callback(undefined, {\n        server: operation.server,\n        session,\n        response\n      });\n    }, err => callback(err));\n  }\n  /** @internal */\n  _getMore(_batchSize, callback) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getMoreOperation = new get_more_1.GetMoreOperation(this.namespace, this.id, this.server, {\n      ...this.cursorOptions,\n      session: this.session,\n      ...this.getMoreOptions\n    });\n    (0, execute_operation_1.executeOperation)(this.client, getMoreOperation, callback);\n  }\n}\nexports.RunCommandCursor = RunCommandCursor;","map":{"version":3,"mappings":";;;;;;AAEA;AACA;AACA;AACA;AAIA;AACA;AAcA;AACA,MAAaA,gBAAiB,SAAQC,gCAAc;EAQlD;;;;EAIOC,UAAU,CAACC,OAAY;IAC5B,IAAI,CAACC,cAAc,CAACD,OAAO,GAAGA,OAAO;IACrC,OAAO,IAAI;EACb;EAEA;;;;EAIOE,YAAY,CAACC,SAAiB;IACnC,IAAI,CAACF,cAAc,CAACG,cAAc,GAAGD,SAAS;IAC9C,OAAO,IAAI;EACb;EAEA;;;;EAIOE,YAAY,CAACC,SAAiB;IACnC,IAAI,CAACL,cAAc,CAACK,SAAS,GAAGA,SAAS;IACzC,OAAO,IAAI;EACb;EAEA;EACgBC,KAAK;IACnB,MAAM,IAAIC,qBAAa,CAAC,mEAAmE,CAAC;EAC9F;EAEA;EACgBC,eAAe,CAACC,CAAkB;IAChD,MAAM,IAAIF,qBAAa,CACrB,4FAA4F,CAC7F;EACH;EAEA;EACgBG,aAAa,CAACD,CAAS,EAAEE,EAAW;IAClD,MAAM,IAAIJ,qBAAa,CACrB,gGAAgG,CACjG;EACH;EAEA;EACgBL,SAAS,CAACO,CAAS;IACjC,MAAM,IAAIF,qBAAa,CACrB,yHAAyH,CAC1H;EACH;EAEA;EACgBF,SAAS,CAACI,CAAS;IACjC,MAAM,IAAIF,qBAAa,CACrB,yHAAyH,CAC1H;EACH;EAKA;EACAK,YAAYC,EAAM,EAAEC,OAAiB,EAAEC,UAAmC,EAAE;IAC1E,KAAK,CAACF,EAAE,CAACG,MAAM,EAAE,cAAE,EAACH,EAAE,CAACI,SAAS,CAAC,EAAEF,OAAO,CAAC;IAvE7B,mBAAc,GAI1B,EAAE;IAoEJ,IAAI,CAACF,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,OAAO,GAAGI,MAAM,CAACC,MAAM,CAAC;MAAE,GAAGL;IAAO,CAAE,CAAC;EAC9C;EAEA;EACUM,WAAW,CAACC,OAAsB,EAAEC,QAAmC;IAC/E,MAAMC,SAAS,GAAG,IAAIC,iCAAmB,CAA2B,IAAI,CAACX,EAAE,EAAE,IAAI,CAACC,OAAO,EAAE;MACzF,GAAG,IAAI,CAACW,aAAa;MACrBJ,OAAO,EAAEA,OAAO;MAChBK,cAAc,EAAE,IAAI,CAACD,aAAa,CAACC;KACpC,CAAC;IACF,wCAAgB,EAAC,IAAI,CAACV,MAAM,EAAEO,SAAS,CAAC,CAACI,IAAI,CAC3CC,QAAQ,IAAG;MACT,IAAIA,QAAQ,CAACC,MAAM,IAAI,IAAI,EAAE;QAC3BP,QAAQ,CACN,IAAIf,0CAAkC,CAAC,wCAAwC,CAAC,CACjF;QACD;;MAEFe,QAAQ,CAACQ,SAAS,EAAE;QAClBC,MAAM,EAAER,SAAS,CAACQ,MAAM;QACxBV,OAAO;QACPO;OACD,CAAC;IACJ,CAAC,EACDI,GAAG,IAAIV,QAAQ,CAACU,GAAG,CAAC,CACrB;EACH;EAEA;EACSC,QAAQ,CAACC,UAAkB,EAAEZ,QAA4B;IAChE;IACA,MAAMa,gBAAgB,GAAG,IAAIC,2BAAgB,CAAC,IAAI,CAACnB,SAAS,EAAE,IAAI,CAACoB,EAAG,EAAE,IAAI,CAACN,MAAO,EAAE;MACpF,GAAG,IAAI,CAACN,aAAa;MACrBJ,OAAO,EAAE,IAAI,CAACA,OAAO;MACrB,GAAG,IAAI,CAACrB;KACT,CAAC;IAEF,wCAAgB,EAAC,IAAI,CAACgB,MAAM,EAAEmB,gBAAgB,EAAEb,QAAQ,CAAC;EAC3D;;AAjHFgB","names":["RunCommandCursor","abstract_cursor_1","setComment","comment","getMoreOptions","setMaxTimeMS","maxTimeMS","maxAwaitTimeMS","setBatchSize","batchSize","clone","error_1","withReadConcern","_","addCursorFlag","__","constructor","db","command","options","client","namespace","Object","freeze","_initialize","session","callback","operation","run_command_1","cursorOptions","readPreference","then","response","cursor","undefined","server","err","_getMore","_batchSize","getMoreOperation","get_more_1","id","exports"],"sources":["C:\\Users\\joelg\\Downloads\\MernStack-Tour-Management-main\\MernStack-Tour-Management-main\\tour-management\\node_modules\\mongodb\\src\\cursor\\run_command_cursor.ts"],"sourcesContent":["import type { BSONSerializeOptions, Document, Long } from '../bson';\r\nimport type { Db } from '../db';\r\nimport { MongoAPIError, MongoUnexpectedServerResponseError } from '../error';\r\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\r\nimport { GetMoreOperation } from '../operations/get_more';\r\nimport { RunCommandOperation } from '../operations/run_command';\r\nimport type { ReadConcernLike } from '../read_concern';\r\nimport type { ReadPreferenceLike } from '../read_preference';\r\nimport type { ClientSession } from '../sessions';\r\nimport { type Callback, ns } from '../utils';\r\nimport { AbstractCursor } from './abstract_cursor';\r\n\r\n/** @public */\r\nexport type RunCursorCommandOptions = {\r\n  readPreference?: ReadPreferenceLike;\r\n  session?: ClientSession;\r\n} & BSONSerializeOptions;\r\n\r\n/** @internal */\r\ntype RunCursorCommandResponse = {\r\n  cursor: { id: bigint | Long | number; ns: string; firstBatch: Document[] };\r\n  ok: 1;\r\n};\r\n\r\n/** @public */\r\nexport class RunCommandCursor extends AbstractCursor {\r\n  public readonly command: Readonly<Record<string, any>>;\r\n  public readonly getMoreOptions: {\r\n    comment?: any;\r\n    maxAwaitTimeMS?: number;\r\n    batchSize?: number;\r\n  } = {};\r\n\r\n  /**\r\n   * Controls the `getMore.comment` field\r\n   * @param comment - any BSON value\r\n   */\r\n  public setComment(comment: any): this {\r\n    this.getMoreOptions.comment = comment;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Controls the `getMore.maxTimeMS` field. Only valid when cursor is tailable await\r\n   * @param maxTimeMS - the number of milliseconds to wait for new data\r\n   */\r\n  public setMaxTimeMS(maxTimeMS: number): this {\r\n    this.getMoreOptions.maxAwaitTimeMS = maxTimeMS;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Controls the `getMore.batchSize` field\r\n   * @param maxTimeMS - the number documents to return in the `nextBatch`\r\n   */\r\n  public setBatchSize(batchSize: number): this {\r\n    this.getMoreOptions.batchSize = batchSize;\r\n    return this;\r\n  }\r\n\r\n  /** Unsupported for RunCommandCursor */\r\n  public override clone(): never {\r\n    throw new MongoAPIError('Clone not supported, create a new cursor with db.runCursorCommand');\r\n  }\r\n\r\n  /** Unsupported for RunCommandCursor: readConcern must be configured directly on command document */\r\n  public override withReadConcern(_: ReadConcernLike): never {\r\n    throw new MongoAPIError(\r\n      'RunCommandCursor does not support readConcern it must be attached to the command being run'\r\n    );\r\n  }\r\n\r\n  /** Unsupported for RunCommandCursor: various cursor flags must be configured directly on command document */\r\n  public override addCursorFlag(_: string, __: boolean): never {\r\n    throw new MongoAPIError(\r\n      'RunCommandCursor does not support cursor flags, they must be attached to the command being run'\r\n    );\r\n  }\r\n\r\n  /** Unsupported for RunCommandCursor: maxTimeMS must be configured directly on command document */\r\n  public override maxTimeMS(_: number): never {\r\n    throw new MongoAPIError(\r\n      'maxTimeMS must be configured on the command document directly, to configure getMore.maxTimeMS use cursor.setMaxTimeMS()'\r\n    );\r\n  }\r\n\r\n  /** Unsupported for RunCommandCursor: batchSize must be configured directly on command document */\r\n  public override batchSize(_: number): never {\r\n    throw new MongoAPIError(\r\n      'batchSize must be configured on the command document directly, to configure getMore.batchSize use cursor.setBatchSize()'\r\n    );\r\n  }\r\n\r\n  /** @internal */\r\n  private db: Db;\r\n\r\n  /** @internal */\r\n  constructor(db: Db, command: Document, options: RunCursorCommandOptions = {}) {\r\n    super(db.client, ns(db.namespace), options);\r\n    this.db = db;\r\n    this.command = Object.freeze({ ...command });\r\n  }\r\n\r\n  /** @internal */\r\n  protected _initialize(session: ClientSession, callback: Callback<ExecutionResult>) {\r\n    const operation = new RunCommandOperation<RunCursorCommandResponse>(this.db, this.command, {\r\n      ...this.cursorOptions,\r\n      session: session,\r\n      readPreference: this.cursorOptions.readPreference\r\n    });\r\n    executeOperation(this.client, operation).then(\r\n      response => {\r\n        if (response.cursor == null) {\r\n          callback(\r\n            new MongoUnexpectedServerResponseError('Expected server to respond with cursor')\r\n          );\r\n          return;\r\n        }\r\n        callback(undefined, {\r\n          server: operation.server,\r\n          session,\r\n          response\r\n        });\r\n      },\r\n      err => callback(err)\r\n    );\r\n  }\r\n\r\n  /** @internal */\r\n  override _getMore(_batchSize: number, callback: Callback<Document>) {\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const getMoreOperation = new GetMoreOperation(this.namespace, this.id!, this.server!, {\r\n      ...this.cursorOptions,\r\n      session: this.session,\r\n      ...this.getMoreOptions\r\n    });\r\n\r\n    executeOperation(this.client, getMoreOperation, callback);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}