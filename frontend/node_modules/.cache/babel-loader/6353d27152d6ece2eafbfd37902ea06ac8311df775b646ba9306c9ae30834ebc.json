{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelg\\\\Downloads\\\\MernStack-Tour-Management-main\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\router\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, Route } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element,\n  adminOnly,\n  ...rest\n}) => {\n  _s();\n  const {\n    user,\n    loading,\n    error\n  } = useContext(AuthContext);\n\n  // Handle loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Handle error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorComponent, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Handle authentication and role-based access\n  if (!user) {\n    // Redirect unauthenticated users to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check for admin role if adminOnly is true\n  if (adminOnly && user.role !== 'admin') {\n    // Redirect non-admin users to a different route or show a message\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the protected route using a render function\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => {\n      // Use a render function to conditionally render the element or any other component\n      return /*#__PURE__*/React.cloneElement(element, props);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ProtectedRoute, \"LZVNMjRsbHE2ICyWOqqONQHAkdc=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","Route","AuthContext","ProtectedRoute","element","adminOnly","rest","user","loading","error","role","props","cloneElement"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/router/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate, Route } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ element, adminOnly, ...rest }) => {\r\n  const { user, loading, error } = useContext(AuthContext);\r\n\r\n  // Handle loading state\r\n  if (loading) {\r\n    return <LoadingComponent />;\r\n  }\r\n\r\n  // Handle error state\r\n  if (error) {\r\n    return <ErrorComponent error={error} />;\r\n  }\r\n\r\n  // Handle authentication and role-based access\r\n  if (!user) {\r\n    // Redirect unauthenticated users to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // Check for admin role if adminOnly is true\r\n  if (adminOnly && user.role !== 'admin') {\r\n    // Redirect non-admin users to a different route or show a message\r\n    return <Navigate to=\"/unauthorized\" />;\r\n  }\r\n\r\n  // Render the protected route using a render function\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        // Use a render function to conditionally render the element or any other component\r\n        return React.cloneElement(element, props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,wBAAwB;AAAC;AAErD,MAAMC,cAAc,GAAG,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAA;EAC1D,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;;EAExD;EACA,IAAIM,OAAO,EAAE;IACX,oBAAO,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;EAC7B;;EAEA;EACA,IAAIC,KAAK,EAAE;IACT,oBAAO,QAAC,cAAc;MAAC,KAAK,EAAEA;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EACzC;;EAEA;EACA,IAAI,CAACF,IAAI,EAAE;IACT;IACA,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EACjC;;EAEA;EACA,IAAIF,SAAS,IAAIE,IAAI,CAACG,IAAI,KAAK,OAAO,EAAE;IACtC;IACA,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EACxC;;EAEA;EACA,oBACE,QAAC,KAAK;IAAA,GACAJ,IAAI;IACR,MAAM,EAAGK,KAAK,IAAK;MACjB;MACA,oBAAOb,KAAK,CAACc,YAAY,CAACR,OAAO,EAAEO,KAAK,CAAC;IAC3C;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN,CAAC;AAAC,GAnCIR,cAAc;AAAA,KAAdA,cAAc;AAqCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}