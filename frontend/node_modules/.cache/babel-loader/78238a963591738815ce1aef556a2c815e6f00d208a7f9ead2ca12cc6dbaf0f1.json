{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelg\\\\Downloads\\\\MernStack-Tour-Management-main\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\router\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [userRole, setUserRole] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Simulating a delay to fetch the user role (remove this in your actual code)\n    setTimeout(() => {\n      const role = 'user'; // Set the user role here (e.g., 'admin', 'user')\n      setUserRole(role);\n      setLoading(false);\n    }, 1000); // Simulated delay in milliseconds\n  }, []);\n\n  // Conditionally render the Navigate component based on userRole\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  } else if (userRole === 'user') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  } else {\n    // Render something else for other roles or cases\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Not authorized\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(Users, \"PE+Iiwnzgqdzjl7Mh00ljmh4i4U=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","Users","userRole","setUserRole","loading","setLoading","setTimeout","role"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/router/ProtectedRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst Users = () => {\r\n  const [userRole, setUserRole] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simulating a delay to fetch the user role (remove this in your actual code)\r\n    setTimeout(() => {\r\n      const role = 'user'; // Set the user role here (e.g., 'admin', 'user')\r\n      setUserRole(role);\r\n      setLoading(false);\r\n    }, 1000); // Simulated delay in milliseconds\r\n  }, []);\r\n\r\n  // Conditionally render the Navigate component based on userRole\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  } else if (userRole === 'user') {\r\n    return <Navigate to=\"/home\" />;\r\n  } else {\r\n    // Render something else for other roles or cases\r\n    return <div>Not authorized</div>;\r\n  }\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAE5C,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAO,UAAU,CAAC,MAAM;MACf,MAAMC,IAAI,GAAG,MAAM,CAAC,CAAC;MACrBJ,WAAW,CAACI,IAAI,CAAC;MACjBF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAID,OAAO,EAAE;IACX,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B,CAAC,MAAM,IAAIF,QAAQ,KAAK,MAAM,EAAE;IAC9B,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAChC,CAAC,MAAM;IACL;IACA,oBAAO;MAAA,UAAK;IAAc;MAAA;MAAA;MAAA;IAAA,QAAM;EAClC;AACF,CAAC;AAAC,GAtBID,KAAK;AAAA,KAALA,KAAK;AAwBX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}