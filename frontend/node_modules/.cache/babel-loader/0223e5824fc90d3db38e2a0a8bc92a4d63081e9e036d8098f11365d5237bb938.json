{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelg\\\\Downloads\\\\MernStack-Tour-Management-main\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\router\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const {\n    isAuthenticated,\n    user\n  } = useContext(AuthContext);\n  console.log('isAuthenticated:', isAuthenticated);\n  console.log('user:', user);\n\n  // A) Unauthenticated users should be redirected to the login page.\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // B) Authenticated users should be redirected to the home page, unless they are an admin.\n  if (!user || user.role !== 'admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If none of the conditions are met, allow access to the route\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"COqImUGpkN3Vyz0GbxPCPNJel14=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","Outlet","AuthContext","ProtectedRoute","isAuthenticated","user","console","log","role"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/router/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst ProtectedRoute = () => {\r\n \r\n  const { isAuthenticated, user } = useContext(AuthContext);\r\n  console.log('isAuthenticated:', isAuthenticated);\r\n  console.log('user:', user);\r\n  \r\n  // A) Unauthenticated users should be redirected to the login page.\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // B) Authenticated users should be redirected to the home page, unless they are an admin.\r\n  if (!user || (user.role !== 'admin')) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  // If none of the conditions are met, allow access to the route\r\n  return <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,WAAW,QAAQ,wBAAwB;AAAC;AAErD,MAAMC,cAAc,GAAG,MAAM;EAAA;EAE3B,MAAM;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGN,UAAU,CAACG,WAAW,CAAC;EACzDI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,eAAe,CAAC;EAChDE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;;EAE1B;EACA,IAAI,CAACD,eAAe,EAAE;IACpB,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EACjC;;EAEA;EACA,IAAI,CAACC,IAAI,IAAKA,IAAI,CAACG,IAAI,KAAK,OAAQ,EAAE;IACpC,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG;EAC5B;;EAEA;EACA,oBAAO,QAAC,MAAM;IAAA;IAAA;IAAA;EAAA,QAAG;AACnB,CAAC;AAAC,GAlBIL,cAAc;AAAA,KAAdA,cAAc;AAoBpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}