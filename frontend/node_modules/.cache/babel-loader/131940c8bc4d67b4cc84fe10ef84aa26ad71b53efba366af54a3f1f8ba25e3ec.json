{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelg\\\\Downloads\\\\MernStack-Tour-Management-main\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\admin\\\\AddTours.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Form, FormGroup } from \"reactstrap\";\nimport { MongoClient, ObjectId } from \"mongodb\"; // Import MongoDB driver\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mongoURI = \"mongodb://localhost:27017\"; // Replace with your MongoDB URI\nconst dbName = \"your-database-name\"; // Replace with your database name\n\nconst AddTours = () => {\n  _s();\n  const [enterTitle, setEnterTitle] = useState(\"\");\n  const [enterShortDesc, setEnterShortDesc] = useState(\"\");\n  const [enterDescription, setEnterDescription] = useState(\"\");\n  const [enterCategory, setEnterCategory] = useState(\"\");\n  const [enterToursImg, setEnterToursImg] = useState(null); // Initialize with null\n  const [loading, setLoading] = useState(false);\n  const addTours = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const client = new MongoClient(mongoURI);\n      await client.connect();\n      const database = client.db(dbName);\n      const toursCollection = database.collection(\"tours\");\n      const tourDocument = {\n        title: enterTitle,\n        shortDesc: enterShortDesc,\n        description: enterDescription,\n        category: enterCategory,\n        imgUrl: enterToursImg // Update as needed\n      };\n\n      // Insert the document into the collection\n      await toursCollection.insertOne(tourDocument);\n      setLoading(false);\n      console.log(\"Tour successfully added\");\n    } catch (error) {\n      console.error(\"Error adding tour:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTours, \"ipAwNBtg5KEopR/0ZxLK5hcbg0s=\");\n_c = AddTours;\nexport default AddTours;\nvar _c;\n$RefreshReg$(_c, \"AddTours\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Form","FormGroup","MongoClient","ObjectId","mongoURI","dbName","AddTours","enterTitle","setEnterTitle","enterShortDesc","setEnterShortDesc","enterDescription","setEnterDescription","enterCategory","setEnterCategory","enterToursImg","setEnterToursImg","loading","setLoading","addTours","e","preventDefault","client","connect","database","db","toursCollection","collection","tourDocument","title","shortDesc","description","category","imgUrl","insertOne","console","log","error"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/admin/AddTours.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, FormGroup } from \"reactstrap\";\r\nimport { MongoClient, ObjectId } from \"mongodb\"; // Import MongoDB driver\r\n\r\nconst mongoURI = \"mongodb://localhost:27017\"; // Replace with your MongoDB URI\r\nconst dbName = \"your-database-name\"; // Replace with your database name\r\n\r\nconst AddTours = () => {\r\n  const [enterTitle, setEnterTitle] = useState(\"\");\r\n  const [enterShortDesc, setEnterShortDesc] = useState(\"\");\r\n  const [enterDescription, setEnterDescription] = useState(\"\");\r\n  const [enterCategory, setEnterCategory] = useState(\"\");\r\n  const [enterToursImg, setEnterToursImg] = useState(null); // Initialize with null\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const addTours = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const client = new MongoClient(mongoURI);\r\n      await client.connect();\r\n\r\n      const database = client.db(dbName);\r\n      const toursCollection = database.collection(\"tours\");\r\n\r\n      const tourDocument = {\r\n        title: enterTitle,\r\n        shortDesc: enterShortDesc,\r\n        description: enterDescription,\r\n        category: enterCategory,\r\n        imgUrl: enterToursImg, // Update as needed\r\n      };\r\n\r\n      // Insert the document into the collection\r\n      await toursCollection.insertOne(tourDocument);\r\n\r\n      setLoading(false);\r\n      console.log(\"Tour successfully added\");\r\n    } catch (error) {\r\n      console.error(\"Error adding tour:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      {/* Your JSX code for the form */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddTours;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,QAAQ,YAAY;AACjE,SAASC,WAAW,EAAEC,QAAQ,QAAQ,SAAS,CAAC,CAAC;AAAA;AAEjD,MAAMC,QAAQ,GAAG,2BAA2B,CAAC,CAAC;AAC9C,MAAMC,MAAM,GAAG,oBAAoB,CAAC,CAAC;;AAErC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMuB,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClBH,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMI,MAAM,GAAG,IAAIpB,WAAW,CAACE,QAAQ,CAAC;MACxC,MAAMkB,MAAM,CAACC,OAAO,EAAE;MAEtB,MAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAE,CAACpB,MAAM,CAAC;MAClC,MAAMqB,eAAe,GAAGF,QAAQ,CAACG,UAAU,CAAC,OAAO,CAAC;MAEpD,MAAMC,YAAY,GAAG;QACnBC,KAAK,EAAEtB,UAAU;QACjBuB,SAAS,EAAErB,cAAc;QACzBsB,WAAW,EAAEpB,gBAAgB;QAC7BqB,QAAQ,EAAEnB,aAAa;QACvBoB,MAAM,EAAElB,aAAa,CAAE;MACzB,CAAC;;MAED;MACA,MAAMW,eAAe,CAACQ,SAAS,CAACN,YAAY,CAAC;MAE7CV,UAAU,CAAC,KAAK,CAAC;MACjBiB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,SAAS;MACRnB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACE;IAAA;IAAA;IAAA;EAAA,QAEU;AAEd,CAAC;AAAC,GA5CIZ,QAAQ;AAAA,KAARA,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}