{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joelg\\\\Downloads\\\\MernStack-Tour-Management-main\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\router\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  isAuthenticated,\n  user\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch the list of users from the backend when the component mounts\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/api/v1/users/\"); // Replace with your backend API endpoint\n      if (response.ok) {\n        const data = await response.json();\n        setUsers(data);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n\n  // Check if the user is authenticated\n\n  // Check if the user has the \"admin\" role\n\n  // If the user is an admin, allow access to the route\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"+quVjBMM9THpHvnUcBaphXhhZmo=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Navigate","Outlet","ProtectedRoute","isAuthenticated","user","users","setUsers","loading","setLoading","fetchUsers","response","fetch","ok","data","json","error","console"],"sources":["C:/Users/joelg/Downloads/MernStack-Tour-Management-main/MernStack-Tour-Management-main/tour-management/frontend/src/router/ProtectedRoute.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ isAuthenticated, user }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch the list of users from the backend when the component mounts\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:4000/api/v1/users/\"); // Replace with your backend API endpoint\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUsers(data);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching user data:\", error);\r\n    }\r\n  };\r\n\r\n  // Check if the user is authenticated\r\n\r\n  // Check if the user has the \"admin\" role\r\n\r\n\r\n\r\n\r\n  // If the user is an admin, allow access to the route\r\n  return <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC;AAEpD,MAAMC,cAAc,GAAG,CAAC;EAAEC,eAAe;EAAEC;AAAK,CAAC,KAAK;EAAA;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACAW,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,YAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC,CAAC,CAAC;MACrE,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;QAClCR,QAAQ,CAACO,IAAI,CAAC;MAChB;MACAL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;;EAEA;;EAKA;EACA,oBAAO,QAAC,MAAM;IAAA;IAAA;IAAA;EAAA,QAAG;AACnB,CAAC;AAAC,GA/BIb,cAAc;AAAA,KAAdA,cAAc;AAiCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}