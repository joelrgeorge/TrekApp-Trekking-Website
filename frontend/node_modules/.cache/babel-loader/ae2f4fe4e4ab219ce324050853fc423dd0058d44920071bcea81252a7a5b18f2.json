{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AwsServiceWorkflow = void 0;\nconst fs = require(\"fs\");\nconst error_1 = require(\"../../../error\");\nconst service_workflow_1 = require(\"./service_workflow\");\n/** Error for when the token is missing in the environment. */\nconst TOKEN_MISSING_ERROR = 'AWS_WEB_IDENTITY_TOKEN_FILE must be set in the environment.';\n/**\r\n * Device workflow implementation for AWS.\r\n *\r\n * @internal\r\n */\nclass AwsServiceWorkflow extends service_workflow_1.ServiceWorkflow {\n  constructor() {\n    super();\n  }\n  /**\r\n   * Get the token from the environment.\r\n   */\n  async getToken() {\n    const tokenFile = process.env.AWS_WEB_IDENTITY_TOKEN_FILE;\n    if (!tokenFile) {\n      throw new error_1.MongoAWSError(TOKEN_MISSING_ERROR);\n    }\n    return fs.promises.readFile(tokenFile, 'utf8');\n  }\n}\nexports.AwsServiceWorkflow = AwsServiceWorkflow;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA;AACA;AAEA;AACA,MAAMA,mBAAmB,GAAG,6DAA6D;AAEzF;;;;;AAKA,MAAaC,kBAAmB,SAAQC,kCAAe;EACrDC;IACE,KAAK,EAAE;EACT;EAEA;;;EAGA,MAAMC,QAAQ;IACZ,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B;IACzD,IAAI,CAACH,SAAS,EAAE;MACd,MAAM,IAAII,qBAAa,CAACT,mBAAmB,CAAC;;IAE9C,OAAOU,EAAE,CAACC,QAAQ,CAACC,QAAQ,CAACP,SAAS,EAAE,MAAM,CAAC;EAChD;;AAdFQ","names":["TOKEN_MISSING_ERROR","AwsServiceWorkflow","service_workflow_1","constructor","getToken","tokenFile","process","env","AWS_WEB_IDENTITY_TOKEN_FILE","error_1","fs","promises","readFile","exports"],"sources":["C:\\Users\\joelg\\Downloads\\MernStack-Tour-Management-main\\MernStack-Tour-Management-main\\tour-management\\node_modules\\mongodb\\src\\cmap\\auth\\mongodb_oidc\\aws_service_workflow.ts"],"sourcesContent":["import * as fs from 'fs';\r\n\r\nimport { MongoAWSError } from '../../../error';\r\nimport { ServiceWorkflow } from './service_workflow';\r\n\r\n/** Error for when the token is missing in the environment. */\r\nconst TOKEN_MISSING_ERROR = 'AWS_WEB_IDENTITY_TOKEN_FILE must be set in the environment.';\r\n\r\n/**\r\n * Device workflow implementation for AWS.\r\n *\r\n * @internal\r\n */\r\nexport class AwsServiceWorkflow extends ServiceWorkflow {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Get the token from the environment.\r\n   */\r\n  async getToken(): Promise<string> {\r\n    const tokenFile = process.env.AWS_WEB_IDENTITY_TOKEN_FILE;\r\n    if (!tokenFile) {\r\n      throw new MongoAWSError(TOKEN_MISSING_ERROR);\r\n    }\r\n    return fs.promises.readFile(tokenFile, 'utf8');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}